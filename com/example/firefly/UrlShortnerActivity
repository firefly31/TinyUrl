package com.example.firefly;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import com.example.mytest.R;

import android.os.AsyncTask;
import android.os.Bundle;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;

public class UrlShortnerActivity extends Activity {

	private static String TINY_URL = "http://tinyurl.com/api-create.php?url=";
	static final String INPUT_EXTRA = "input_extra";
	static final String URL_EXTRA = "url_extra";
	private EditText mTextView;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		mTextView = (EditText) findViewById(R.id.input_text_view);

		findViewById(R.id.go_button).setOnClickListener(new OnClickListener() {
			@SuppressLint("NewApi")
			@Override
			public void onClick(View v) {
				String input = mTextView.getText() == null ? null : mTextView
						.getText().toString();
				Log.d(DatabaseUtils.TAG, "onClick " + input);
				if (input == null || input.isEmpty()) {
					return;
				}
				new FindTinyUrlAsyncTask().execute(input);
			}
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		return true;
	}

	private class FindTinyUrlAsyncTask extends
			AsyncTask<String, Integer, String[]> {
		private ProgressDialog progress;

		@Override
		protected void onPreExecute() {
			progress = new ProgressDialog(UrlShortnerActivity.this);
			progress.setTitle(getString(R.string.progress_dialog_title));
			progress.setMessage(getString(R.string.progress_dialog_text));
			progress.show();
		}

		@Override
		protected String[] doInBackground(String... params) {
			String input = params.length < 1 ? "" : params[0];
			String short_url = DatabaseUtils.getUrl(getApplicationContext(), input);
			if (short_url == null) {
				StringBuilder builder = new StringBuilder();
				builder.append(TINY_URL).append(input);
				short_url = findUrl(builder.toString());
				DatabaseUtils.putUrl(getApplicationContext(), input, short_url);
			}
			return new String[] { input, short_url };
		}

		@Override
		protected void onPostExecute(String[] result) {
			if (progress.isShowing()) {
				progress.dismiss();
			}
			Intent intent = new Intent();
			intent.setClass(getApplicationContext(), UrlResultActivity.class);
			intent.putExtra(INPUT_EXTRA, result[0]);
			intent.putExtra(URL_EXTRA, result[1]);
			startActivity(intent);
		}

		private String findUrl(String input) {
			StringBuilder response = new StringBuilder();
			DefaultHttpClient client = new DefaultHttpClient();
			HttpGet httpGet = new HttpGet(input);
			try {
				HttpResponse execute = client.execute(httpGet);
				InputStream content = execute.getEntity().getContent();

				BufferedReader buffer = new BufferedReader(
						new InputStreamReader(content));
				String s = "";
				while ((s = buffer.readLine()) != null) {
					response.append(s);
				}
				Log.d(DatabaseUtils.TAG, "http response - "+s);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return response.toString();
		}
	}
}
