package com.example.firefly;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

/** Util class to find if an entry for get and put operations in the db. */
public class DatabaseUtils {

	static final String TAG = "UrlShortner";
	
	private DatabaseUtils() {
	}

	private static void printAll(Context context) {
		ShortenUrlDBHelper dbHelper = new ShortenUrlDBHelper(context);
		SQLiteDatabase db = dbHelper.getWritableDatabase();
		Cursor cursor = null;
		cursor = db.query(ShortenUrlDBHelper.TABLE_NAME,
				new String[] { ShortenUrlDBHelper.COLUMN_KEY_NAME, ShortenUrlDBHelper.COLUMN_KEY_URL },
				null, null, null, null, null);
		cursor.moveToFirst();
		Log.d(TAG, "Printing ... Col count = " + cursor.getColumnCount() + ", count = "
				+ cursor.getCount());
		if (cursor.getCount() == 0) {
			return;
		}
		int colCount = cursor.getColumnCount();
		while(!cursor.isAfterLast()) {
			for (int i = 0; i < colCount; i++) {
				Log.d(TAG, "Cursor = "+i+", "+cursor.getColumnName(i)+", "+cursor.getString(i));
			}
			cursor.moveToNext();
		}
		cursor.close();
		db.close();
	}
	
	/**
	 * If an entry for short url exists in the database for given url returns
	 * that, else returns null.
	 * 
	 * @param context
	 * @param name - the full url
	 * @return short url for the given full url if it eists in db, else null.
	 */
	public static String getUrl(Context context, String name) {
		printAll(context);
		String result = null;
		ShortenUrlDBHelper dbHelper = new ShortenUrlDBHelper(context);
		SQLiteDatabase db = dbHelper.getWritableDatabase();
		Cursor cursor = null;
		try {
			cursor = db.query(ShortenUrlDBHelper.TABLE_NAME,
					new String[] { ShortenUrlDBHelper.COLUMN_KEY_URL },
					ShortenUrlDBHelper.COLUMN_KEY_NAME +" = \""+name+"\"", null, null, null, null);
			cursor.moveToFirst();
			Log.d(TAG, "getUrl Col count = " + cursor.getColumnCount() + ", count = "
					+ cursor.getCount());
			if (cursor.getCount() == 0) {
				return null;
			}
			result = cursor.getString(0);
			Log.d(TAG, "getUrl For input = " + name + ", returning = " + result);
		} finally {
			if (cursor != null) {
				cursor.close();
			}
			db.close();
		}
		return result;
	}

	/**
	 * Adds full and short url in the database.
	 * 
	 * @param context
	 * @param name
	 * @param url
	 */
	public static void putUrl(Context context, String name, String url) {
		printAll(context);
		ShortenUrlDBHelper dbHelper = new ShortenUrlDBHelper(context);
		ContentValues values = new ContentValues();
		values.put(ShortenUrlDBHelper.COLUMN_KEY_NAME, name);
		values.put(ShortenUrlDBHelper.COLUMN_KEY_URL, url);
		SQLiteDatabase db = dbHelper.getWritableDatabase();
		long id = db.insert(ShortenUrlDBHelper.TABLE_NAME, null, values);
		if (id == -1) {
			Log.e(TAG, "Insert into database failed");
		}
		db.close();
	}
	
	private static class ShortenUrlDBHelper extends SQLiteOpenHelper {

		private static final String DB_NAME = "shorturls.db";
		static final String TABLE_NAME = "short_urls";
		private static final int DB_VERSION = 1;
		private static final String COLUMN_ID = "_id";

		static final String COLUMN_KEY_NAME = "name";
		static final String COLUMN_KEY_URL = "url";

		public ShortenUrlDBHelper(Context context) {
			super(context, DB_NAME, null, DB_VERSION);
		}

		@Override
		public void onCreate(SQLiteDatabase db) {
			String db_create = "create table " + TABLE_NAME + "(" + COLUMN_ID
					+ " integer primary key autoincrement, " + COLUMN_KEY_NAME
					+ " text not null, " + COLUMN_KEY_URL + " text not null );";
			Log.d(TAG, "Create command = " + db_create);
			db.execSQL(db_create);
		}

		@Override
		public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
			Log.w(TAG, "Upgrading database from version " + oldVersion + " to "
					+ newVersion + ", which will destroy all old data");
			db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
			onCreate(db);
		}
	}
}
